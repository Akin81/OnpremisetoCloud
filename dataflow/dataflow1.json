{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sinktoazuresql"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          company as string,",
				"          location as string,",
				"          industry as string,",
				"          total_laid_off as string,",
				"          percentage_laid_off as string,",
				"          date as string,",
				"          stage as string,",
				"          country as string,",
				"          funds_raised_millions as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Company = company,",
				"          Location = location,",
				"          industry,",
				"          {Laid Off} = total_laid_off,",
				"          percentage_laid_off,",
				"          Date = date,",
				"          Stage = stage,",
				"          country,",
				"          funds_raised_millions",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 cast(output(",
				"          Company as string,",
				"          Location as string,",
				"          industry as string,",
				"          {Laid Off} as integer,",
				"          percentage_laid_off as decimal(10,0),",
				"          Date as date,",
				"          funds_raised_millions as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 split(!isError(),",
				"     disjoint: false) ~> split1@(goodrows, badrows)",
				"split1@goodrows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CompanyID as integer,",
				"          Company as string,",
				"          Location as string,",
				"          Industry as string,",
				"          Laid_Off as integer,",
				"          Percentage_laid_off as decimal(5,2),",
				"          Date as date,",
				"          Stage as string,",
				"          Country as string,",
				"          Fund_raised_millions as decimal(15,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinktoazuresql"
			]
		}
	}
}